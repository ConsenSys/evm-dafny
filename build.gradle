/*
 * Copyright 2022 ConsenSys Software Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software dis-
 * tributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
// Apply eclipse plugin to add support for Eclipse
apply plugin: 'eclipse'
// Apply application plugin for generating start scripts
apply plugin: 'application'

// ======================================================================
// Dafny Build
// ======================================================================

task compileDafny {
    // Specify inputs
    inputs.files(fileTree('src/dafny/') { include '**/*.dfy' } )
    // Specify outputs
    outputs.files(fileTree('evm-java') { include '**/*.java' } )
    // Enable caching
    outputs.cacheIf { true }
    // Specify actions
    doLast {
        // Generate Dafny Source
        exec {
            executable 'dafny'
            args '/verifyAllModules','/out:evm','/vcsLoad:2.0','/noExterns','/compileTarget:java','/compileVerbose:0','src/dafny/evm.dfy','src/dafny/evms/berlin.dfy'
        }
        // Delete general file containing extern definitions.
        delete "evm-java/External_Compile"
    }
}

// ======================================================================
// Dafny Tests
// ======================================================================

task testDafny {
    // Specify inputs
    inputs.files(fileTree('src') { include '**/*.dfy' } )
    // Specify outputs
    outputs.files(fileTree('tmp-java') { include '**/*.java' } )
    // Require code gen
    dependsOn compileDafny
    // Specify actions
    doLast {
        // Verify and execute all Dafny tests found in the test
        // directory.
        fileTree("src/test/dafny").include('**/*.dfy').each {
            File file -> {
                exec {
                    executable 'dafny'
                    args '/runAllTests:1','/vcsLoad:2.0','/out:tmp','/noExterns','/compileTarget:java','/compile:4','/compileVerbose:0',file
                }
            }
        }
    }
}

// ======================================================================
// Java Build
// ======================================================================

repositories {
    // Use MavenCentral for resolving dependencies
    mavenCentral()
}

test {
    // Specify inputs
    inputs.files(fileTree('tests') { include '**/*.json' } )
    //
    useJUnitPlatform()
    filter {
        includeTestsMatching('dafnyevm.Tests')
        includeTestsMatching('dafnyevm.GeneralStateTests')
    }
}

// Specify that should run compileDafny before compileJava.
// Otherwise, the Java compiler cannot find up-to-date Dafny tests!
compileJava.dependsOn testDafny

sourceSets {
    main {
        java {
            // Add Dafny output directory to Java build path.
            srcDirs("evm-java")
        }
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    implementation("commons-cli:commons-cli:1.5.0")
    implementation("org.apache.commons:commons-lang3:3.12.0")
    implementation("org.json:org.json:chargebee-1.0")
    implementation("org.web3j:utils:5.0.0")
    implementation("org.web3j:rlp:5.0.0")
    implementation("org.whiley:evmtools:0.3.14")
    implementation files('evm-java/DafnyRuntime.jar')
    //
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
}

// ======================================================================
// Java Application
// ======================================================================

application {
    mainClass = 'dafnyevm.Main'
    applicationName = 'dafnyevm'
}
